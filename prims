#include <bits/stdc++.h>
#define Max 10001
#define ll long long
using namespace std;
vector<int>grph[Max];
vector<int>cost[Max];
int vst[Max];
struct data
{ int node,weight;
bool operator < ( data p ) const {
//overloading operator
return weight > p.weight;
}
};
int prim(int src, int n)
{
    vst[src] = 1;
    priority_queue<data> q;
    ll sum = 0;
    for(int i = 0; i < (n-1); ++i)
    {
        int sz = grph[i].size(), c;
        for(int j = 0; j < sz; j++)
        {
            if(vst[j] == 0)
            {
                data d;
                d.node = grph[src][j];
                d.weight = cost[src][j];
                q.push(d);
            }

        }
        while(vst[src] == 1)
        {
            data d = q.top();
            q.pop();
            src = d.node;
            c = d.weight;
        }
        sum += c;
        vst[src] = 1;
    }
    return sum;
}
int main()
{
    int nd, edg;
    scanf("%d %d", &nd, &edg);
    for(int i = 0; i < edg; ++i)
    {
        int e1, e2, c;
        scanf("%d %d %d", &e1, &e2, &c);
        grph[e1].push_back(e2);
        grph[e2].push_back(e1);
        cost[e1].push_back(c);
        cost[e2].push_back(c);
    }
    memset(vst, 0, sizeof vst);
    printf("%lld\n", prim(1, nd));
    return 0;
}
